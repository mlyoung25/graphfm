extends layout

block head
  title Bubble Chart - D3v4
  script(src='https://cdnjs.cloudflare.com/ajax/libs/d3/4.13.0/d3.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js')

block content
  h3 Bubble Chart - D3v4
  h4 double click to see artist info

  style.
    .bubble {
      fill-opacity: 1;
      stroke: #000;
      stroke-width: 1px;
    } 
    #BubbleChart div {
      background-color: white;
      color: black;
      padding: 5px;
      border-radius: 5px;
      pointer-events: none;
    }

  #BubbleChart
  script.
    // Create an array from the topArtists data.
    var topArtistsData = !{JSON.stringify(user.topArtists)};
    
    var svg = d3.select("#BubbleChart")
      .append("svg")
      .attr("viewBox", "0,0,1600,1200")
      .attr("preserveAspectRatio", "xMinYMin meet")
      .style("font", "22px Barlow");

    var width = 1600;
    var height = 1200;
    var defs = svg.append('defs');
    
    topArtistsData.forEach((data, index) => {
      const img = new Image();
      img.crossOrigin = 'anonymous';
      img.src = data.imageUrl;

      img.onload = function() {
        defs.append("pattern")
          .attr("id", "img-pattern-" + index)
          .attr("width", 1)
          .attr("height", 1)
          .append("image")
          .attr("xlink:href", this.src)
          .attr("width", data.radius * 2)
          .attr("height", data.radius * 2);
      };
    });

    var tooltip = d3.select("#BubbleChart")
    .append("div")
    .style("position", "absolute")
    .style("visibility", "hidden")
    .text("Default tooltip text");

    var circles = svg.selectAll("circle")
      .data(topArtistsData)
      .enter()
      .append("circle")
      .attr("id", function (d, i) { return "circle-" + i; });

    var circleAttributes = circles
      .attr("cx", function (d) { return d.x; })
      .attr("cy", function (d) { return d.y; })
      .attr("r", function (d) { return d.radius; })
      .style("fill", function (d, i) { return "url(#img-pattern-" + i + ")"; })
      .attr("class", "bubble")
      .on("dblclick", function (d) { 
        window.location.href = "/api/lastfm?artist=" + d.name;
      })
      .on("mouseover", function(d){ 
        d3.select(this)
          .transition()
          .duration(200)
          .attr("r", d.radius * 1.1);  // enlargement factor 1.1
        tooltip.style("visibility", "visible");
        tooltip.text(d.name + ": " + d.playcount);
      })
      .on("mousemove", function(){
        tooltip.style("top", (d3.event.pageY-10)+"px")
        .style("left",(d3.event.pageX+10)+"px");
      })
      .on("mouseout", function(d){ 
        d3.select(this)
          .transition()
          .duration(200)
          .attr("r", d.radius);
        tooltip.style("visibility", "hidden");
      });

    var simulation = d3.forceSimulation(topArtistsData)
      .force("x", d3.forceX(width / 2).strength(0.05))
      .force("y", d3.forceY(height / 2).strength(0.05))
      .force('collide', d3.forceCollide().radius(function(d) { 
        return d.radius + 1;
      }));

    circles.call(d3.drag()
      .on("start", dragstarted)
      .on("drag", dragged)
      .on("end", dragended));

    simulation.nodes(topArtistsData)
      .on('tick', ticked);

    function ticked() {
      circles
          .attr("cx", function (d) { return d.x; })
          .attr("cy", function (d) { return d.y; })
    }

    function dragstarted(d) {
      if (!d3.event.active) simulation.alphaTarget(0.3).restart();
      d.fx = d.x;
      d.fy = d.y;
    }

    function dragged(d) {
      d.fx = d3.event.x;
      d.fy = d3.event.y;
    }

    function dragended(d) {
      if (!d3.event.active) simulation.alphaTarget(0);
      d.fx = null;
      d.fy = null;
    }

  a.button#saveButton(class="plausible-event-name=Save+Image plausible-event-type=Bubbles" href="#")
     div.fa.fa-download Save      
  script.
    document.getElementById("saveButton").addEventListener('click', function() {
      var svgElement = document.querySelector('svg');

      var urlParams = new URLSearchParams(window.location.search);
      var username = urlParams.get('username');

      var userName = document.createElementNS('http://www.w3.org/2000/svg', 'text');
      userName.setAttribute('x', '75%'); 
      userName.setAttribute('y', '90%');  // position it above the url
      userName.textContent = username;  // replace 'username' with the actual username
      userName.style.fontSize = '30px'; 
      userName.style.fill = '#333';
      svgElement.appendChild(userName);

      var url = document.createElementNS('http://www.w3.org/2000/svg', 'text');
      url.setAttribute('x', '75%'); // This positions the text near the right edge
      url.setAttribute('y', '95%'); // This positions the text near the bottom
      url.textContent = 'https://lastfmchart.onrender.com'; // your url
      url.style.fontSize = '30px'; // you can change the size
      url.style.fill = '#333' // You can choose color
      svgElement.appendChild(url);

      // Convert SVG string to data URL
      var svgData = new XMLSerializer().serializeToString(svgElement);
      svgElement.removeChild(url);  // Once we captured the image, remove the url text
      svgElement.removeChild(userName);

      var canvas = document.createElement('canvas');
      var svgSize = svgElement.getBoundingClientRect();
      canvas.width = svgSize.width;
      canvas.height = svgSize.height;
      var ctx = canvas.getContext('2d');
      var img = document.createElement('img');
      img.setAttribute("src", "data:image/svg+xml;base64," + btoa(unescape(encodeURIComponent(svgData))));
      
      img.onload = function() {
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.drawImage(img, 0, 0);
        var imgsrc = canvas.toDataURL("image/png");
        var a = document.createElement("a");
        a.download = "LastFMChart.png";
        a.href = imgsrc;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
      };
    });